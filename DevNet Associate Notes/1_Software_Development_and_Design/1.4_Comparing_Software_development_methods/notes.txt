#Waterfall

- This methodology is very sequential and linear, based on a clear scope from the start and tackling each step in order. This means that as each one of the eight Waterfall stages (conception, initiation, analysis, design, construction, testing, implementation, and maintenance) are reached, the developers move on to the next step.
- The narrow and linear nature of Waterfall makes it great for simple, unchanging projects. It is easy to manage, with each step having specific deliverables and clearly delineated start and finish points.
- The idea is that development does not start until all of the scoping out actions have been reached and this helps projects to deliver on time.
-  Waterfall processes struggle with change. They struggle because they are so sequential and usually, after the completion of a phase, it is challenging and costly to go back and change anything. Also, because development does not start until the first few phases are finished, there won’t be any working software for stakeholders to evaluate until late in the process.

Advantages
- With a waterfall method, the client knows what to expect. They will have a reasonable idea of the size, cost, and timeline for the project. They will have a definite idea of what their program will do in the end
- In staff turnover matters, waterfall’s reliable documentation allows for minimal project impact.
- In waterfall projects, progress is more easily measured, as the full scope of the work is known in advance.

Disadvantages
- Waterfall methods rely massively on initial requirements. However, if these requirements are wrong in any manner, the project is, in technical terms, doomed
- The entire product is only tested at the end. If bugs are written early in the code, but discovered late, their existence may have affected how another code was written. This could also lead to the ‘doom’ scenario

When to use it
- When definition, not speed, is key to success.
- The project is short or relatively simple
- The project could impact on important systems, such as banking mainframes or public sector databases (though this depends on the project)
- If the team or organisation isn’t in a mature enough state to adopt an agile approach


#Agile

- Agile approaches are designed with flexibility at heart. Developers start with a simplistic project design, and then begin to work on small modules. The work on these is performed in sprints (weekly or monthly). At the end of each sprint, priorities of the project are evaluated, and tests are run. These weekly or monthly sprints allow for bugs to be identified, and client feedback to be incorporated into the design before the next sprint is run.
- The goal of each iteration is to create a working product, which can be displayed to stakeholders. Feedback can then be included in the next iteration or future ones.
- It is excellent for projects where the end-goal may not be clearly defined from the start and can evolve as it develops. With so many cycles, clients can give continuous user-based feedback.

Advantages
- The testing conducted at the end of each sprint ensures that bugs are caught and taken care of in the development cycle. They won’t be found at the end.
- Because the Agile methods allow you to make changes, it’s easier to keep your product up-to-date with the latest technological advancements.

Disadvantages
- As the original project does not have a definitive plan, the final product can be different than what was initially intended.

When to use it
- When speedy production is more valuable than the quality of the product.
- When the product is meant for an industry with quickly changing standards.


#Lean

- By only focussing on what’s necessary, Lean methods are often able to speed up the process, reducing project time and cost.
- With Waterfall and Agile methods, the client/stakeholder/end user receives the product at the end of the project. However, with a Lean methodology, you are mostly focusing on building a tiny subset of features and getting that Minimal Viable Product (MVP) to your clients and the market a lot sooner than with Waterfall and Agile methods.
- The quicker delivery helps Lean remove potential waste as you will quickly identify if you are building the right product or not. If you are not, then you can abandon ship sooner thus saving two precious project resources: time and money.

Advantages
- Lean uses fewer resources to build an MVP which considerably reduces the overall costs.
- Lean helps company’s management to focus on smart work rather than hard work by making strategic plans for the future.

Disadvantages
- For the Lean method to work, everyone involved in development should follow the process, from project manager to developer. If anyone of them doesn’t, there can be a big impact on productivity.

When to use it
- Lean methods often work best in small projects with a short time frame, as Lean teams are usually quite small, and bigger projects require multiple teams. While not impossible, this can be difficult to manage effectively on a larger, more complex project.